apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

Properties properties = new Properties()
properties.load(project.rootProject.file('keys.properties').newDataInputStream())
def googleMapsApiKey = properties.getProperty('com.google.android.geo.API_KEY')
def fabricApiKey = properties.getProperty('io.fabric.ApiKey')
def twitterConsumerKey = properties.getProperty('com.twitter.sdk.android.CONSUMER_KEY')
def twitterConsumerSecret = properties.getProperty('com.twitter.sdk.android.CONSUMER_SECRET')

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ie.dublinbuspal.android"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1000
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [ googleMapsApiKey: "$googleMapsApiKey",
                                 fabricApiKey: "$fabricApiKey",
                                 twitterConsumerKey: "$twitterConsumerKey",
                                 twitterConsumerSecret: "$twitterConsumerSecret" ]
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            useProguard false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            ext.enableCrashlytics = false
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    lintOptions {
        abortOnError false //TODO re-enable linting
    }
}


dependencies {
    implementation project(':base')
    implementation project(':data')
    implementation project(':database')
    implementation project(":domain")
    implementation project(":repository")
    implementation project(":service")

    // Android Support
    implementation libs.support_appcompat
    implementation libs.support_design
//    implementation "com.android.support:recyclerview-v7:$rootProject.androidSupportVersion"
//    implementation "com.android.support:support-v4:$rootProject.androidSupportVersion"
//    implementation "com.android.support:support-vector-drawable:$rootProject.androidSupportVersion"
    implementation libs.support_constraint

    implementation 'com.github.conor-ob:sticky-headers-recyclerview:27f63c0'
    implementation 'com.mikepenz:fastadapter-commons:3.2.7'

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    //TODO used for google maps?
//    // Android GMS
//    implementation "com.google.android.gms:play-services-location:$rootProject.androidGMSVersion"
//    implementation "com.google.android.gms:play-services-maps:$rootProject.androidGMSVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:$rootProject.rxPermissionsVersion"
    implementation "pl.charmas.android:android-reactive-location2:$rootProject.rxLocationVersion"

    // Room Persistence Library
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    //testing testImplementation "android.arch.persistence.room:testing:1.0.0"

    // Mosby MVP
    implementation "com.hannesdorfmann.mosby3:mvp:$rootProject.mosbyVersion"

    // Google Libraries
    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    // Retrofit
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation("com.squareup.retrofit2:converter-simplexml:$rootProject.simpleXmlVersion") {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }

    // Twitter
    implementation "com.twitter.sdk.android:tweet-ui:$rootProject.twitterVersion"

    // Apache Commons
    implementation "org.apache.commons:commons-lang3:$rootProject.apacheCommonsVersion"

    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    // Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.espressoTestRunnerVersion") {
        exclude group: 'com.google.code.findbugs'
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation libs.mosby
    implementation libs.store //TODO does this need to be here?
//
//    testImplementation "com.google.dagger:dagger:$rootProject.daggerVersion"
//    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
//    testImplementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
//    testImplementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
//    kaptAndroidTest "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    testImplementation project(path: ':service', configuration: 'testOutput')

}
repositories {
    mavenCentral()
}
