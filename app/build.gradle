apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

Properties properties = new Properties()
if (project.rootProject.file("keys.properties").exists()) {
    properties.load(project.rootProject.file('keys.properties').newDataInputStream())
}
def googleMapsApiKey = properties.getProperty('com.google.android.geo.API_KEY')
def fabricApiKey = properties.getProperty('io.fabric.ApiKey')
def twitterConsumerKey = properties.getProperty('com.twitter.sdk.android.CONSUMER_KEY')
def twitterConsumerSecret = properties.getProperty('com.twitter.sdk.android.CONSUMER_SECRET')

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "ie.dublinbuspal.android"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 1000
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [googleMapsApiKey     : "$googleMapsApiKey",
                                fabricApiKey: "$fabricApiKey",
                                twitterConsumerKey   : "$twitterConsumerKey",
                                twitterConsumerSecret: "$twitterConsumerSecret"]

//        multiDexEnabled true

//        javaCompileOptions {
//            annotationProcessorOptions {
//                includeCompileClasspath = true
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = ".debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

}

dependencies {
    implementation project(':data')
    implementation project(':database')
    implementation project(':domain')
    implementation project(":repository")
    implementation project(":service")
    implementation project(':util')

    implementation "androidx.appcompat:appcompat:${versions.androidx.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx.constraintlayout}"
    implementation "androidx.recyclerview:recyclerview:${versions.androidx.recyclerview}"
    implementation "androidx.room:room-runtime:${versions.androidx.room_runtime}"
//    implementation "com.github.conor-ob:sticky-headers-recyclerview:${versions.sticky_headers_recyclerview}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.maps.android:android-maps-utils:${versions.android_map_utils}"
    implementation "com.hannesdorfmann.mosby3:mvp-conductor:${versions.mvp_conductor}"
    implementation "com.jakewharton.threetenabp:threetenabp:${versions.threetenabp}"
    implementation "com.jakewharton.timber:timber:${versions.timber}"
    implementation "com.mikepenz:fastadapter:${versions.fastadapter}"
    implementation "com.mikepenz:fastadapter-commons:${versions.fastadapter_commons}"
    implementation "com.twitter.sdk.android:tweet-ui:$versions.tweet_ui"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rx_android}"
    implementation "io.reactivex.rxjava2:rxkotlin:${versions.rx_kotlin}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    implementation "pl.charmas.android:android-reactive-location2:${versions.android_reactive_location2}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger_compiler}"

    androidTestImplementation "androidx.test:core:${testVersions.androidx.core}"
    androidTestImplementation "androidx.test.ext:junit:${testVersions.androidx.junit}"
    androidTestImplementation "androidx.test:runner:${testVersions.androidx.runner}"
    testImplementation "junit:junit:${testVersions.junit}"

    // Conflict with dependency 'blah blah' in project ':app'. Resolved versions for runtime classpath (x.x.x) and compile classpath (x.x.x) differ. This can lead to runtime crashes
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.converter_gson}"
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation("com.squareup.okhttp3:okhttp:3.11.0")
    implementation("com.squareup.okio:okio:1.14.0")

//    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
//    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
//        transitive = true
//    }
//    implementation 'com.google.android.gms:play-services-base:16.0.1'
//    implementation 'com.google.android.gms:play-services:16.0.0'

    //TODO temporary
    implementation("com.squareup.retrofit2:converter-simplexml:2.3.0") {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }
}
